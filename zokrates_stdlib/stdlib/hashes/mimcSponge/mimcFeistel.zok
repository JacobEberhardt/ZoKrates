// MiMCFeistel configured with 220 rounds

from "./IVconstants" import IV

const u32 ROUNDS = 220

def main(field xL_in, field xR_in, field k) -> field[2]:
    field t = 0
    field[ROUNDS] t2 = [0; ROUNDS]
    field[ROUNDS] t4 = [0; ROUNDS]
    field[ROUNDS] xL = [0; ROUNDS]
    field[ROUNDS] xR = [0; ROUNDS]
    field c = 0

    for u32 i in 0..ROUNDS do
        u32 idx = if i == 0 then 0 else i - 1  fi

        c = IV[i]
        t = if i == 0 then k + xL_in else k + xL[idx] + c fi

        t2[i] = t * t
        t4[i] = t2[i] * t2[i]

        xL[i] = if i < ROUNDS - 1 then (if i == 0 then xR_in + t4[i] * t else xR[idx] + t4[i] * t fi) else xL[idx] fi
        xR[i] = if i < ROUNDS - 1 then (if i == 0 then xL_in else xL[idx] fi) else xR[idx] + t4[i]*t fi
    endfor

    return [xL[ROUNDS - 1], xR[ROUNDS - 1]]